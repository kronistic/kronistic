"""Initial migration.

Revision ID: 171a4f5c0c2f
Revises: 
Create Date: 2022-04-13 13:34:37.891594

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '171a4f5c0c2f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calendars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gcal_id', sa.String(length=1024), nullable=False),
    sa.Column('gcal_summary', sa.String(length=100), nullable=True),
    sa.Column('gcal_sync_token', sa.String(length=36), nullable=True),
    sa.Column('gcal_resource_id', sa.String(length=36), nullable=True),
    sa.Column('gcal_channel_id', sa.String(length=36), nullable=True),
    sa.Column('gcal_channel_expires_at', sa.DateTime(), nullable=True),
    sa.Column('gcal_last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gcal_channel_id'),
    sa.UniqueConstraint('user_id', 'gcal_id')
    )
    op.create_table('fixed_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calendar_id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(length=1024), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('kron_duty', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['calendar_id'], ['calendars.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('calendar_id', 'uid')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('tokens', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.Column('active_calendar_id', sa.Integer(), nullable=True),
    sa.Column('virtual_link', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['active_calendar_id'], ['calendars.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_foreign_key('calendars_user_id_fkey', 'calendars', 'users', ['user_id'], ['id'])
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('length', sa.Interval(), nullable=False),
    sa.Column('window_start', sa.DateTime(), nullable=True),
    sa.Column('window_end', sa.DateTime(), nullable=True),
    sa.Column('freeze_horizon', sa.Interval(), nullable=False),
    sa.Column('is_finalized', sa.Boolean(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('deleting', sa.Boolean(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('attendees', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('optionalattendees', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('draft_start', sa.DateTime(), nullable=True),
    sa.Column('draft_end', sa.DateTime(), nullable=True),
    sa.Column('draft_attendees', sa.ARRAY(sa.Integer()), nullable=False),
    sa.Column('uid', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('draft_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calendar_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('uid', sa.String(length=1024), nullable=False),
    sa.Column('deleting', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['calendar_id'], ['calendars.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade():
    # If we wanted to implement this we'd need to remove e.g.
    # `calendars_user_id_fkey` manually to break the circular
    # dependency between users and calendars.
    raise NotImplementedError('downgrade not implemented')
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('draft_events')
    # op.drop_table('events')
    # op.drop_table('users')
    # op.drop_table('fixed_events')
    # op.drop_table('calendars')
    # ### end Alembic commands ###
