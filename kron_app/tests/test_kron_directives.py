import pytest
from kron_app.kron_directives import parse_kron_directive

@pytest.mark.parametrize('item, expected',[
        ('@kron',(True,{'everyone':0})),
        ('@kronistic',(True,{'everyone':0})),
        (' @kron ',(True,{'everyone':0})),
        ('   @KRON   ',(True,{'everyone':0})),
        ('@kron if needed',(True,{'everyone':1})),
        (' @kron   if  needed  ',(True,{'everyone':1})),
        (' @Kronistic if  needed ',(True,{'everyone':1})),
        ('@kron if really needed',(True,{'everyone':2})),
        (' @kron   if  really needed  ',(True,{'everyone':2})),
        (' @Kronistic if really  needed ',(True,{'everyone':2})),
        ('@kron if really really needed',(True,{'everyone':3})),
        ('@kron foo bar',(True,{})),
        ('',(False,None)),
        ('meeting',(False,None)),
        ('kronos',(False,None)),
        ('  krona  ',(False,None)),
        # ('@kronif needed',(False,None)),
        ('if needed',(False,None)),
        ('kron',(False,None)),
        (' KRoN',(False,None)),
        ('kronistic',(False,None)),
        ('  kron  ',(False,None)),
        (' kronistic   ',(False,None)),
        ('kron if needed',(False,None)),
        ('  Kronistic if needed  ',(False,None)),
        ('@kron available', (True,{'everyone':0})),
        ('@kron available if needed',(True,{'everyone':1})),
        ('@kron available if really needed',(True,{'everyone':2})),
        # ('@kron available for "Bob"',(True,{'bob':0})),
        # ('@kron available for Bob',(True,{'bob':0})),
        # ('@kron available for Bob.',(True,{'bob':0})),
        # ('@kron available for Bob, jane, m@foo.com',(True,{'bob':0,'jane':0,'m@foo.com':0})),
        # ('@kron available for Bob, jane and m@foo.com.',(True,{'bob':0,'jane':0,'m@foo.com':0})),
        # ('@kron available for "Bob" if needed',(True,{'bob':1})),
        # ('@kron available for "Bob" if needed, available if really needed',(True,{'bob':1,'everyone':2})),
        # ('@kron available for "Bob" and "jane" if needed, available if really needed, available for "jane" if really needed',(True,{'bob':1,'jane':1, 'everyone':2})),
        # ('@kron available for "Bob" and "jane" if needed, available if really needed, available for "jane"',(True,{'bob':1,'jane':0, 'everyone':2})),

        # ('@kron available for "Bob" and "jane" if damn filthy necessary, free if very severely vital, yes for "jane" if intensely critical',(True,{'bob':3,'jane':2, 'everyone':3})),
        ('@kron available for "Bob"',(True,{})),
        ('@kron available for Bob',(True,{})),
        ('@kron available for Bob.',(True,{})),
        ('@kron available for Bob, jane, m@foo.com',(True,{})),
        ('@kron available for Bob, jane and m@foo.com.',(True,{})),
        ('@kron available for "Bob" if needed',(True,{})),
        ('@kron available for "Bob" if needed, available if really needed',(True,{})),
        ('@kron available for "Bob" and "jane" if needed, available if really needed, available for "jane" if really needed',(True,{})),
        ('@kron available for "Bob" and "jane" if needed, available if really needed, available for "jane"',(True,{})),
        ('@kron available for "Bob" and "jane" if damn filthy necessary, free if very severely vital, yes for "jane" if intensely critical',(True,{})),
])
def test_parse_kronduty(item,expected):
  assert parse_kron_directive(item) == expected
